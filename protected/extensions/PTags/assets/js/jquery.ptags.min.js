(function(e) {
    e.fn.ptags_add = function(e) {
        if (!e)
            return this;
        this.each(function() {
            if (!this.pines_tags)
                return;
            this.pines_tags.ptags_add(e)
        });
        return this
    };
    e.fn.ptags_remove = function(e) {
        if (!e)
            return this;
        this.each(function() {
            if (!this.pines_tags)
                return;
            this.pines_tags.ptags_remove(e)
        });
        return this
    };
    e.fn.ptags_remove_all = function() {
        this.each(function() {
            if (!this.pines_tags)
                return;
            this.pines_tags.ptags_remove_all()
        });
        return this
    };
    var t = e.fn.val;
    e.fn.val = function(e) {
        var n = t.apply(this, arguments);
        if (typeof e != "undefined") {
            this.each(function() {
                if (typeof this.pines_tags != "undefined")
                    this.pines_tags.ptags_sync_input()
            })
        }
        return n
    };
    e.fn.ptags = function(t) {
        var n = e.extend({}, e.fn.ptags.defaults, t);
        var r = this;
        r.each(function() {
            var t = e(this);
            t.ptags_version = "1.1.2";
            if (t.hasClass("ui-ptags-tag-box"))
                return true;
            t.addClass("ui-ptags-tag-box");
            t.extend(t, n);
            t.ptags_widget = e("<span />");
            t.ptags_container = e("<span />");
            t.ptags_tags = t.ptags_tags.slice();
            t.ptags_add = function(n) {
                e.merge(t.ptags_tags, typeof n == "string" ? [n] : n);
                t.ptags_unique_check();
                t.ptags_update_val();
                t.ptags_update_tags()
            };
            t.ptags_remove = function(n) {
                e.each(typeof n == "string" ? [n] : n, function() {
                    var n = e.inArray("" + this, t.ptags_tags);
                    if (n > -1)
                        t.ptags_tags.splice(n, 1)
                });
                t.ptags_update_val();
                t.ptags_update_tags()
            };
            t.ptags_remove_all = function() {
                t.ptags_tags = [];
                t.ptags_update_val();
                t.ptags_update_tags()
            };
            t.ptags_unique_check = function() {
                for (var n = 0; n < t.ptags_tags.length; n++) {
                    if (t.ptags_trim_tags)
                        t.ptags_tags[n] = e.trim(t.ptags_tags[n]);
                    if (e.inArray(t.ptags_tags[n], t.ptags_tags) < n || t.ptags_tags[n].length == 0) {
                        t.ptags_tags.splice(n, 1);
                        n--
                    }
                }
            };
            t.ptags_update_val = function() {
                var e = t.val();
                var n = t.ptags_tags.join(t.ptags_delimiter);
                if (e != n)
                    t.val(n).change()
            };
            t.ptags_sync_input = function() {
                var e = t.ptags_tags.join(t.ptags_delimiter);
                var n = t.val();
                if (n == e)
                    return;
                t.ptags_tags = n.split(t.ptags_delimiter);
                t.ptags_unique_check();
                t.ptags_update_val();
                t.ptags_update_tags()
            };
            t.ptags_update_tags = function() {
                if (!t.ptags_show_tags)
                    return;
                t.ptags_tag_container.empty();
                e.each(t.ptags_tags, function(n, i) {
                    var s = e("<span />").addClass("ui-state-default ui-corner-all ui-ptags-tag");
                    s.append(e('<a href="#" />').addClass("ui-ptags-tag-text").html(i).click(function() {
                        if (t.ptags_editable && t.ptags_input_box) {
                            if (t.ptags_noclick) {
                                t.ptags_noclick = false;
                                s.removeClass("ui-state-hover");
                                return false
                            }
                            r.val(s.text()).focus().select();
                            t.ptags_remove(s.text())
                        }
                        return false
                    }));
                    if (t.ptags_editable && t.ptags_input_box) {
                        s.hover(function() {
                            e(this).addClass("ui-state-hover")
                        }, function() {
                            e(this).removeClass("ui-state-hover")
                        })
                    }
                    if (t.ptags_remover) {
                        s.children().addClass("ui-ptags-tag-text-icon").end().append(e('<a href="#" />').addClass("ui-ptags-tag-remover ui-icon ui-icon-circle-minus").click(function() {
                            t.ptags_remove(s.text());
                            return false
                        }))
                    }
                    t.ptags_tag_container.append(s)
                })
            };
            t.ptags_widget.addClass("ui-ptags");
            t.wrapAll(t.ptags_widget);
            t.ptags_widget = t.parent();
            t.ptags_container.addClass("ui-ptags-tag-box-container");
            t.wrapAll(t.ptags_container);
            t.ptags_container = t.parent();
            if (t.ptags_input_box) {
                var r = e(t.get(0)).clone().val("").keydown(function(e) {
                    if (e.keyCode == 13 && !e.shiftKey) {
                        t.ptags_add(r.val().split(t.ptags_delimiter));
                        r.val("");
                        return false
                    }
                }).blur(function() {
                    if (r.val() != "") {
                        t.ptags_add(r.val().split(t.ptags_delimiter));
                        r.val("")
                    }
                });
                if (r.attr("id"))
                    r.attr("id", "__ptags_" + r.attr("id"));
                if (r.attr("name"))
                    r.attr("name", "__ptags_" + r.attr("name"));
                t.ptags_container.append(r)
            }
            if (t.ptags_current_text) {
                var i = t.val().split(t.ptags_delimiter);
                e.merge(t.ptags_tags, i);
                t.ptags_unique_check();
                t.ptags_update_val()
            }
            if (t.ptags_show_tags) {
                t.ptags_tag_container = e("<span />").addClass("ui-ptags-tag-container");
                t.ptags_widget.append(t.ptags_tag_container);
                t.ptags_update_tags()
            }
            t.change(t.ptags_sync_input);
            if (t.ptags_sortable != false) {
                t.ptags_tag_container.sortable(t.ptags_sortable).bind("sortupdate", function() {
                    t.ptags_tags = e.map(t.ptags_tag_container.find("a.ui-ptags-tag-text"), function(t) {
                        return e(t).text()
                    });
                    t.ptags_update_val()
                }).bind("sortstop", function() {
                    t.ptags_noclick = true
                })
            }
            if (!t.ptags_show_box)
                t.css("display", "none");
            this.pines_tags = t
        });
        return r
    };
    e.fn.ptags.defaults = {ptags_tags: [], ptags_current_text: true, ptags_delimiter: ",", ptags_trim_tags: true, ptags_show_tags: true, ptags_show_box: false, ptags_input_box: true, ptags_remover: true, ptags_editable: true, ptags_sortable: false}
})(jQuery)